"use strict";(self.webpackChunkmy_trip=self.webpackChunkmy_trip||[]).push([[53],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>d});var a=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function t(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?t(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):t(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,a,o=function(e,n){if(null==e)return{};var r,a,o={},t=Object.keys(e);for(a=0;a<t.length;a++)r=t[a],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(a=0;a<t.length;a++)r=t[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=a.createContext({}),c=function(e){var n=a.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},u=function(e){var n=c(e.components);return a.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var r=e.components,o=e.mdxType,t=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=o,f=m["".concat(i,".").concat(d)]||m[d]||p[d]||t;return r?a.createElement(f,s(s({ref:n},u),{},{components:r})):a.createElement(f,s({ref:n},u))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var t=r.length,s=new Array(t);s[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var c=2;c<t;c++)s[c]=r[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5543:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var a=r(7462),o=(r(7294),r(3905));const t={},s="Callbacks",l={unversionedId:"WEB/javascript/peticiones_http/callbacks",id:"WEB/javascript/peticiones_http/callbacks",title:"Callbacks",description:"1. Son funciones que se ejecutan a traves de otra funcion.",source:"@site/docs/WEB/javascript/12_peticiones_http/02_callbacks.md",sourceDirName:"WEB/javascript/12_peticiones_http",slug:"/WEB/javascript/peticiones_http/callbacks",permalink:"/mytrip/docs/WEB/javascript/peticiones_http/callbacks",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"JS",previous:{title:"Objeto XMLHTTPRequest o AJAX",permalink:"/mytrip/docs/WEB/javascript/peticiones_http/objeto_XMLHTTPRequest"},next:{title:"promesas",permalink:"/mytrip/docs/WEB/javascript/peticiones_http/promesas"}},i={},c=[{value:"Primer Ejemplo del callback:",id:"primer-ejemplo-del-callback",level:2},{value:"Segundo Ejemplo del callback:",id:"segundo-ejemplo-del-callback",level:2}],u={toc:c};function p(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"callbacks"},"Callbacks"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Son funciones que se ejecutan a traves de otra funcion."),(0,o.kt)("li",{parentName:"ol"},"los callback no son asincronicos."),(0,o.kt)("li",{parentName:"ol"},"el nombre comun a la variable de la funcion callback es ",(0,o.kt)("strong",{parentName:"li"},"cb"))),(0,o.kt)("h2",{id:"primer-ejemplo-del-callback"},"Primer Ejemplo del callback:"),(0,o.kt)("p",null,"lo que se quiere mostrar en este ejemplo es el uso comun de las funciones callback donde debemos validar si la funcion devuelve un error o si se completo exitosamente. en este caso fallara si el id es igual a 2."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'\n//creamos la funcion que recibira la funcion callback\nconst getUser=(id,cb)=>{\n\n    //creamos al objeto user\n    const user={\n        name: "Dorian",\n        id:id\n    }\n\n    //validamos datos para saber si \n    //retornar la funcion con error o\n    //la funcion sin error.\n\n    if(id==2)cb("usuario no existe"); //funcion con error\n    else cb(null,user); //funcion sin error\n}\n\ngetUser(1,(err,user)=>{\n    //validamos si nos retorno la funcion con error\n    if(err) return console.log(err);\n\n    // ejecutamos codigo con la funcion sin error\n    console.log(`User name is ${user.name}`)\n});\n\n\n')),(0,o.kt)("h2",{id:"segundo-ejemplo-del-callback"},"Segundo Ejemplo del callback:"),(0,o.kt)("p",null,"En este ejemplo se quiere mostrar que se pueden hacer callback anidados esto puede complicar mucho el codigo ya que genera el ",(0,o.kt)("strong",{parentName:"p"},"callback hell")," que es un codigo dificil de mantener por eso se crearon las ",(0,o.kt)("strong",{parentName:"p"},"promesas")," que mejoran el codigo y se vuelven mas faciles de mantener."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'\n//creamos un objeto users para simular una peticion a una base de datos users\nconst users=[\n    {\n        id:1,\n        name:"Dorian"\n    },{\n        id:2,\n        name:"Laura"\n    },{\n        id:3,\n        name:"Carlos"\n    }\n];\n//creamos un objeto emails para simular una segunda peticion a una base con los datos devueltos en users.\nconst emails=[\n    {\n        id:1,\n        email:\'dorian@gmail.com\'\n    },\n    {\n        id:2,\n        email:\'laura@gmail.com\'\n    }\n];\n\n\nconst getUser=(id,cb)=>{\n    //usamos la funcion find para buscar el usuario que tenga id igual al que pasamos.\n    const user =users.find(user=>user.id==id); \n    \n    //validamos si el usuario existe esta comprobacion es lo mismo que colocar user==undefined\n\n\n    if(!user){\n        //retornamos funcion cuando hay error\n        cb(`No existe un usuario con este ${id}`);\n    }else{\n        //retornamos funcion cuando no hay error\n        cb(null,user);\n    } \n}\n\n//funcion que sera llamada cuando se tenga los datos del usuario.\nconst getEmail =(user,cb)=>{\n    const email=emails.find(email=>email.id==user.id);\n\n    if(!email) cb(`${user.name} no tiene email`);\n    else cb(null,{\n        id:user.id,\n        name:user.name,\n        email:email.email\n    })\n}\n\ngetUser(1,(err,user)=>{\n    //validamos si nos retorno la funcion con error\n    if(err) return console.log(err);\n\n    // ejecutamos codigo con la funcion sin error\n\n    getEmail(user,(err,res)=>{\n        if(err) return console.log(err);\n        console.log(res);\n    })\n});\n')))}p.isMDXComponent=!0}}]);