"use strict";(self.webpackChunkmy_trip=self.webpackChunkmy_trip||[]).push([[7602],{3905:(e,r,n)=>{n.d(r,{Zo:()=>p,kt:()=>d});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=t.createContext({}),c=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},p=function(e){var r=c(e.components);return t.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,b=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return n?t.createElement(b,s(s({ref:r},p),{},{components:n})):t.createElement(b,s({ref:r},p))}));function d(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5925:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var t=n(7462),o=(n(7294),n(3905));const a={},s="intersection observer",i={unversionedId:"WEB/javascript/APIs_HTML/api_intersection_observer/primeros_pasos",id:"WEB/javascript/APIs_HTML/api_intersection_observer/primeros_pasos",title:"intersection observer",description:"lo que nos permite hacer esta api es saber cuando es visible un elemento o cuando no, se suele usar para carga perezosa que consiste en no cargar todo de una vez sino cuando el usuario lo solicite. la forma mas conocida son las historias de facebook o instagram",source:"@site/docs/WEB/javascript/14_APIs_HTML/07_api_intersection_observer/01_primeros_pasos.md",sourceDirName:"WEB/javascript/14_APIs_HTML/07_api_intersection_observer",slug:"/WEB/javascript/APIs_HTML/api_intersection_observer/primeros_pasos",permalink:"/mytrip/docs/WEB/javascript/APIs_HTML/api_intersection_observer/primeros_pasos",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"JS",previous:{title:"API Online y Offline",permalink:"/mytrip/docs/WEB/javascript/APIs_HTML/api_online_offline/primeros_pasos"},next:{title:"API geolocation",permalink:"/mytrip/docs/WEB/javascript/APIs_HTML/api_geolocation/primeros_pasos"}},l={},c=[{value:"carga lenta o lazy load",id:"carga-lenta-o-lazy-load",level:2}],p={toc:c};function u(e){let{components:r,...n}=e;return(0,o.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"intersection-observer"},"intersection observer"),(0,o.kt)("p",null,"lo que nos permite hacer esta api es saber cuando es visible un elemento o cuando no, se suele usar para carga perezosa que consiste en no cargar todo de una vez sino cuando el usuario lo solicite. la forma mas conocida son las historias de facebook o instagram"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'//se cargan los elementos a observar\nconst boxes=document.querySelectorAll(".all")\n\n\n//se esta creando un callback para ver si intersecta un elemento la intersesion sucede cuando esta en nuestro rango de vista o esta apunto de aparecer\nconst callback=(entries)=>{\n    console.log(entries)\n    entries.foreach(entry=>{\n        if(entry.isIntersecting){\n            console.log(entry.target.id)\n        }\n    })\n}\n\n//se crea el objeto IntersectionObserver\nconst observer=new IntersectionObserver(callback)\n\n//se pone a la escucha cada elemento por el objeto IntersectionObserver\nboxes.foreach(elem=>observer.observe(elem))\n')),(0,o.kt)("p",null,"el objeto IntersectionObserver tiene un segundo parametro que nos permite modificar las opciones de interseccion del objeto las cuales son:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"root: es el padre del objeto normalmente el viwport"),(0,o.kt)("li",{parentName:"ol"},"rootMargin: funciona igual que el margin en css. "),(0,o.kt)("li",{parentName:"ol"},"threshold: recibe valores del 0 al 1 que simbolizan el porcentaje de lo que se ve del elemento.")),(0,o.kt)("p",null,"ejemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const=options={\n    threshold:0.5\n}\nconst observer=new IntersectionObserver(callback,options)\n")),(0,o.kt)("h2",{id:"carga-lenta-o-lazy-load"},"carga lenta o lazy load"),(0,o.kt)("p",null,"se puede crear colocando a la escucha el ultimo elemento cargado y hacer una nueva peticion para que cargue mas elementos. "),(0,o.kt)("p",null,"ejemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"\nconst setObserver=()=>{\n    const options={\n        threshold:0.5\n    }\n\n    const observer=new IntersectionObserver(funcion,options);\n\n    observer.observe(elementoPadre.lastElementChild)\n}\n")))}u.isMDXComponent=!0}}]);