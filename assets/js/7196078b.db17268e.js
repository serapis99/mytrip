"use strict";(self.webpackChunkmy_trip=self.webpackChunkmy_trip||[]).push([[1536],{3905:(e,o,r)=>{r.d(o,{Zo:()=>c,kt:()=>d});var t=r(7294);function a(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}function n(e,o){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var o=1;o<arguments.length;o++){var r=null!=arguments[o]?arguments[o]:{};o%2?n(Object(r),!0).forEach((function(o){a(e,o,r[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(r,o))}))}return e}function l(e,o){if(null==e)return{};var r,t,a=function(e,o){if(null==e)return{};var r,t,a={},n=Object.keys(e);for(t=0;t<n.length;t++)r=n[t],o.indexOf(r)>=0||(a[r]=e[r]);return a}(e,o);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)r=n[t],o.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),u=function(e){var o=t.useContext(s),r=o;return e&&(r="function"==typeof e?e(o):i(i({},o),e)),r},c=function(e){var o=u(e.components);return t.createElement(s.Provider,{value:o},e.children)},p={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},m=t.forwardRef((function(e,o){var r=e.components,a=e.mdxType,n=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(r),d=a,g=m["".concat(s,".").concat(d)]||m[d]||p[d]||n;return r?t.createElement(g,i(i({ref:o},c),{},{components:r})):t.createElement(g,i({ref:o},c))}));function d(e,o){var r=arguments,a=o&&o.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=m;var l={};for(var s in o)hasOwnProperty.call(o,s)&&(l[s]=o[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<n;u++)i[u]=r[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9033:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>l,toc:()=>u});var t=r(7462),a=(r(7294),r(3905));const n={},i="trabajo colaborativo",l={unversionedId:"Programacion/Basico/Conocimiento Comun/Git y Github/trabajo_colaborativo",id:"Programacion/Basico/Conocimiento Comun/Git y Github/trabajo_colaborativo",title:"trabajo colaborativo",description:"1. cuando se quiere colaborar en un proyecto lo primero que debemos hacer es un fork que nos permitira copiar el repositorio del due\xf1o del proyecto a nuestro repositorio, esto se hace desde github.",source:"@site/docs/Programacion/Basico/01_Conocimiento Comun/02_Git y Github/16_trabajo_colaborativo.md",sourceDirName:"Programacion/Basico/01_Conocimiento Comun/02_Git y Github",slug:"/Programacion/Basico/Conocimiento Comun/Git y Github/trabajo_colaborativo",permalink:"/mytrip/docs/Programacion/Basico/Conocimiento Comun/Git y Github/trabajo_colaborativo",draft:!1,tags:[],version:"current",sidebarPosition:16,frontMatter:{},sidebar:"ProgramacionBasica",previous:{title:"github pages",permalink:"/mytrip/docs/Programacion/Basico/Conocimiento Comun/Git y Github/githube_pages"},next:{title:"configurando mas de una cuenta git",permalink:"/mytrip/docs/Programacion/Basico/Conocimiento Comun/Git y Github/configurando_mas_de_una_cuenta_git"}},s={},u=[{value:"En el repositorio original",id:"en-el-repositorio-original",level:2},{value:"una vez aceptado el pull request",id:"una-vez-aceptado-el-pull-request",level:2},{value:"due\xf1o original repositorio",id:"due\xf1o-original-repositorio",level:3},{value:"persona que solicita el pull request",id:"persona-que-solicita-el-pull-request",level:3}],c={toc:u};function p(e){let{components:o,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},c,r,{components:o,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"trabajo-colaborativo"},"trabajo colaborativo"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"cuando se quiere colaborar en un proyecto lo primero que debemos hacer es un ",(0,a.kt)("strong",{parentName:"li"},"fork")," que nos permitira copiar el repositorio del due\xf1o del proyecto a nuestro repositorio, esto se hace desde github."),(0,a.kt)("li",{parentName:"ol"},"cuando ya este en nuestro repositorio clonaremos nuestro repositorio remoto (github) a nuestro entorno de trabajo.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone ruta_repositorio\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"renombar el remoto que apunta a ",(0,a.kt)("strong",{parentName:"li"},"origin")," por ",(0,a.kt)("strong",{parentName:"li"},"fork")," que hara referencia a nuestro remoto.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git remote rename origin fork\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"agregar el nuevo ",(0,a.kt)("strong",{parentName:"li"},"origin")," con la ruta del remoto_original desde donde le hicimos el fork.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git remote add origin ruta_remoto_original\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"crear una nueva rama donde nosotros trabajaremos para poder presentar el pull request. ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout -b nueva-rama\n\n#se trabajaria normal con git add y git commit hasta que lo subamos al remoto.\n\ngit push fork nombre_rama\n")),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},"solicitar el pull request desde github.")),(0,a.kt)("h2",{id:"en-el-repositorio-original"},"En el repositorio original"),(0,a.kt)("p",null,"cuando estamos del lado donde nos solicitan el pull request debemos validar los cambios que nos estan sugeriendo en ",(0,a.kt)("strong",{parentName:"p"},"files changed"),", cuando estamos seguros que los cambios no afectan el proyecto y si lo mejoran podemos hacer un ",(0,a.kt)("strong",{parentName:"p"},"marge pull request")," donde uniremos los cambios con el codigo que nos enviaron en el pull request."),(0,a.kt)("h2",{id:"una-vez-aceptado-el-pull-request"},"una vez aceptado el pull request"),(0,a.kt)("h3",{id:"due\xf1o-original-repositorio"},"due\xf1o original repositorio"),(0,a.kt)("p",null,"el due\xf1o solo debe hacer un git pull para actualizar el repositorio por el cambio de pull request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git pull\n")),(0,a.kt)("h3",{id:"persona-que-solicita-el-pull-request"},"persona que solicita el pull request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# descargar los cambios del remoto origin\ngit pull origin main\n\n#subir los cambios en el remoto fork\ngit push fork main\n\n#eliminar rama del trabajo pull request\ngit branch -d rama-nueva\n\n#enviar la peticion de eliminar la rama en el remoto\ngit push fork --delete rama-nueva\n")))}p.isMDXComponent=!0}}]);