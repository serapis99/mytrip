"use strict";(self.webpackChunkmy_trip=self.webpackChunkmy_trip||[]).push([[410],{3905:(e,n,a)=>{a.d(n,{Zo:()=>u,kt:()=>m});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),c=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},u=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(a),m=r,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return a?t.createElement(g,o(o({ref:n},u),{},{components:a})):t.createElement(g,o({ref:n},u))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6867:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=a(7462),r=(a(7294),a(3905));const i={},o="Expresiones regulares",l={unversionedId:"WEB/javascript/Expresiones_regulares/expresiones",id:"WEB/javascript/Expresiones_regulares/expresiones",title:"Expresiones regulares",description:"se usan para disminuir las lineas de codigo necesarias para validar un string ya que te permite generar patrones de coincidencia en un string a evaluar, mozilla nos da la siguiente documentacion.",source:"@site/docs/WEB/javascript/13_Expresiones_regulares/02_expresiones.md",sourceDirName:"WEB/javascript/13_Expresiones_regulares",slug:"/WEB/javascript/Expresiones_regulares/expresiones",permalink:"/mytrip/docs/WEB/javascript/Expresiones_regulares/expresiones",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"JS",previous:{title:"validacion basica",permalink:"/mytrip/docs/WEB/javascript/Expresiones_regulares/validacion_basica"},next:{title:"Algunas expresiones comunes",permalink:"/mytrip/docs/WEB/javascript/Expresiones_regulares/algunas_Expresiones_comunes"}},s={},c=[{value:"Metodo",id:"metodo",level:2}],u={toc:c};function p(e){let{components:n,...a}=e;return(0,r.kt)("wrapper",(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"expresiones-regulares"},"Expresiones regulares"),(0,r.kt)("p",null,"se usan para disminuir las lineas de codigo necesarias para validar un string ya que te permite generar patrones de coincidencia en un string a evaluar, mozilla nos da la siguiente ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Regular_Expressions"},"documentacion"),"."),(0,r.kt)("p",null,"Ejemplo basico:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const text=document.getElementById('text').textContent\n\n//primera forma de crear la expresion\nconst regEx=/lorem/gi\n\n//segunda forma\n\nconst regEx2=new RegExp('lorem','gi');\n\n//tercera\nconst regEx3=new RegExp('/lorem/','gi');\n\n\nconsole.log(regEx.test(text))\nconsole.log(regEx2.test(text))\nconsole.log(regEx3.test(text))\n\n")),(0,r.kt)("h2",{id:"metodo"},"Metodo"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Metodo"),(0,r.kt)("th",{parentName:"tr",align:null},"Descripcion"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"exec()"),(0,r.kt)("td",{parentName:"tr",align:null},"Ejecuta una b\xfasqueda por una coincidencia en una cadena. Devuelve un arreglo de informaci\xf3n o null en una discrepancia.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"test()"),(0,r.kt)("td",{parentName:"tr",align:null},"Prueba una coincidencia en una cadena. Devuelve true o false.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"match()"),(0,r.kt)("td",{parentName:"tr",align:null},"Devuelve un arreglo que contiene todas las coincidencias, incluidos los grupos de captura, o null si no se encuentra ninguna coincidencia.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"matchAll()"),(0,r.kt)("td",{parentName:"tr",align:null},"Devuelve un iterador que contiene todas las coincidencias, incluidos los grupos de captura.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"search()"),(0,r.kt)("td",{parentName:"tr",align:null},"Prueba una coincidencia en una cadena. Devuelve el \xedndice de la coincidencia, o -1 si la b\xfasqueda falla.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"replace()"),(0,r.kt)("td",{parentName:"tr",align:null},"Ejecuta una b\xfasqueda por una coincidencia en una cadena y reemplaza la subcadena coincidente con una subcadena de reemplazo.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"replaceAll()"),(0,r.kt)("td",{parentName:"tr",align:null},"Ejecuta una b\xfasqueda de todas las coincidencias en una cadena y reemplaza las subcadenas coincidentes con una subcadena de reemplazo.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"split()"),(0,r.kt)("td",{parentName:"tr",align:null},"Utiliza una expresi\xf3n regular o una cadena fija para dividir una cadena en un arreglo de subcadenas.")))))}p.isMDXComponent=!0}}]);