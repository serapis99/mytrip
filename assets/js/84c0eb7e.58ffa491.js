"use strict";(self.webpackChunkmy_trip=self.webpackChunkmy_trip||[]).push([[9837],{3905:(e,o,n)=>{n.d(o,{Zo:()=>l,kt:()=>p});var a=n(7294);function t(e,o,n){return o in e?Object.defineProperty(e,o,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[o]=n,e}function r(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);o&&(a=a.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?r(Object(n),!0).forEach((function(o){t(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}function c(e,o){if(null==e)return{};var n,a,t=function(e,o){if(null==e)return{};var n,a,t={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],o.indexOf(n)>=0||(t[n]=e[n]);return t}(e,o);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],o.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var s=a.createContext({}),u=function(e){var o=a.useContext(s),n=o;return e&&(n="function"==typeof e?e(o):i(i({},o),e)),n},l=function(e){var o=u(e.components);return a.createElement(s.Provider,{value:o},e.children)},m={inlineCode:"code",wrapper:function(e){var o=e.children;return a.createElement(a.Fragment,{},o)}},d=a.forwardRef((function(e,o){var n=e.components,t=e.mdxType,r=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(n),p=t,f=d["".concat(s,".").concat(p)]||d[p]||m[p]||r;return n?a.createElement(f,i(i({ref:o},l),{},{components:n})):a.createElement(f,i({ref:o},l))}));function p(e,o){var n=arguments,t=o&&o.mdxType;if("string"==typeof e||t){var r=n.length,i=new Array(r);i[0]=d;var c={};for(var s in o)hasOwnProperty.call(o,s)&&(c[s]=o[s]);c.originalType=e,c.mdxType="string"==typeof e?e:t,i[1]=c;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5854:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>u});var a=n(7462),t=(n(7294),n(3905));const r={},i="Fucionando ramas",c={unversionedId:"Programacion/Basico/Conocimiento Comun/Git y Github/union_de_ramas",id:"Programacion/Basico/Conocimiento Comun/Git y Github/union_de_ramas",title:"Fucionando ramas",description:"cuando ya se han hecho pruebas y se desean unir dos ramas debemos seguir estos dos pasos.",source:"@site/docs/Programacion/Basico/01_Conocimiento Comun/02_Git y Github/08_union_de_ramas.md",sourceDirName:"Programacion/Basico/01_Conocimiento Comun/02_Git y Github",slug:"/Programacion/Basico/Conocimiento Comun/Git y Github/union_de_ramas",permalink:"/mytrip/docs/Programacion/Basico/Conocimiento Comun/Git y Github/union_de_ramas",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{},sidebar:"ProgramacionBasica",previous:{title:"Manejo de ramas",permalink:"/mytrip/docs/Programacion/Basico/Conocimiento Comun/Git y Github/manejo_de_ramas"},next:{title:"modificaciones en ultimo commit",permalink:"/mytrip/docs/Programacion/Basico/Conocimiento Comun/Git y Github/modificaciones_ultimo_commit"}},s={},u=[{value:"conflictos",id:"conflictos",level:2}],l={toc:u};function m(e){let{components:o,...n}=e;return(0,t.kt)("wrapper",(0,a.Z)({},l,n,{components:o,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"fucionando-ramas"},"Fucionando ramas"),(0,t.kt)("p",null,"cuando ya se han hecho pruebas y se desean unir dos ramas debemos seguir estos dos pasos."),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"situarnos en la rama que se quedara con el contenido fucionado, normalmente la (main)."),(0,t.kt)("li",{parentName:"ol"},"fusionar")),(0,t.kt)("p",null,"al momento de fucionar las ramas tenemos dos posibles casos los cuales son:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"fast-forward:")," la funsion se hace automaticamente, no hay conflictos por resolver"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"manual merge:")," la fusion hay que hacerla manualmente, para resolver conflictos de duplicacion de contenido.")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"#moverse a la rama que quedara con los datos\ngit checkout nombre-rama\n\n#unirse con la rama tal\ngit marge rama-a-fucionar\n")),(0,t.kt)("h2",{id:"conflictos"},"conflictos"),(0,t.kt)("p",null,"cuando hay un conflicto en algunos editores nos preguntara con cual codigo nos quedaremos si con el codigo de la rama principal o el codigo que esta en la rama que fucionamos, hay editores que mezclan los dos codigos y nos toca manualmente decidir que codigo va y cual codigo no. una vez que resolvamos los conflictos en el codigo debemos dar un ",(0,t.kt)("strong",{parentName:"p"},"git add")," y un ",(0,t.kt)("strong",{parentName:"p"},"git commit")," para guardar estos datos."))}m.isMDXComponent=!0}}]);