"use strict";(self.webpackChunkmy_trip=self.webpackChunkmy_trip||[]).push([[7309],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>c});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=t.createContext({}),d=function(e){var a=t.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},u=function(e){var a=d(e.components);return t.createElement(i.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=d(n),c=r,y=m["".concat(i,".").concat(c)]||m[c]||p[c]||l;return n?t.createElement(y,o(o({ref:a},u),{},{components:n})):t.createElement(y,o({ref:a},u))}));function c(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var d=2;d<l;d++)o[d]=n[d];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},825:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var t=n(7462),r=(n(7294),n(3905));const l={},o="Array",s={unversionedId:"WEB/javascript/estructura_datos/array",id:"WEB/javascript/estructura_datos/array",title:"Array",description:"En javascript los array son estructuras de datos que pueden almacenar varios datos con las siguientes caracteristicas:",source:"@site/docs/WEB/javascript/06_estructura_datos/01_array.md",sourceDirName:"WEB/javascript/06_estructura_datos",slug:"/WEB/javascript/estructura_datos/array",permalink:"/mytrip/docs/WEB/javascript/estructura_datos/array",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"JS",previous:{title:"Palabras claves Break y Continue",permalink:"/mytrip/docs/WEB/javascript/ciclos_bucles/break_continue_labels"},next:{title:"Spread operator (operador de expansion)",permalink:"/mytrip/docs/WEB/javascript/estructura_datos/Spread_operator"}},i={},d=[{value:"Recomendaciones",id:"recomendaciones",level:2},{value:"Propiedades",id:"propiedades",level:2},{value:"Metodos",id:"metodos",level:2},{value:"metodos de array avanzados.",id:"metodos-de-array-avanzados",level:2},{value:"Saber si una variables es un array",id:"saber-si-una-variables-es-un-array",level:2}],u={toc:d};function p(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"array"},"Array"),(0,r.kt)("p",null,"En javascript los array son estructuras de datos que pueden almacenar varios datos con las siguientes caracteristicas:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"los arrays en javascript permiten guardar datos de diferente tipo."),(0,r.kt)("li",{parentName:"ol"},"los arrays en javascript son mutables pueden cambiar el tama\xf1o. En otras palabras pueden almacenar mas o menos elementos."),(0,r.kt)("li",{parentName:"ol"},"se puede acceder al valor de un elemento dependiendo su posicion comenzando en 0"),(0,r.kt)("li",{parentName:"ol"},"personalmente pienso que los array en javascript se comportan como listas de otros lenguajes.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const array=["ruben",\'dario\',32,1.73]\nconsole.log(array[1])\narray[1]=\'gacha\'\nconsole.log(array[1])\n\n\n//**********************forma antigua no usar \n\nlet autos=new Array("bmw","volvo","toyota")\n\n')),(0,r.kt)("h2",{id:"recomendaciones"},"Recomendaciones"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"se recomienda que se declare un array con la palabra clave reservada ",(0,r.kt)("strong",{parentName:"li"},"const")," ya que no se va a modificar la referencia en memoria del arreglo."),(0,r.kt)("li",{parentName:"ol"},"No se recomienda agregar un valor directamente por la posicion del array ya que esto puede crear muchos valores vacios."),(0,r.kt)("li",{parentName:"ol"},"Se deberia intentar mantener un solo tipo de dato en el array")),(0,r.kt)("h2",{id:"propiedades"},"Propiedades"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Propiedades"),(0,r.kt)("th",{parentName:"tr",align:null},"Descripcion"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".length"),(0,r.kt)("td",{parentName:"tr",align:null},"nos da la cantidad de elementos")))),(0,r.kt)("h2",{id:"metodos"},"Metodos"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Metodos"),(0,r.kt)("th",{parentName:"tr",align:null},"Descripcion"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".push(elem)"),(0,r.kt)("td",{parentName:"tr",align:null},"agrega un elemento al array al ultimo")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".unshift(elem)"),(0,r.kt)("td",{parentName:"tr",align:null},"agrega un elemento al inicio del array")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".pop()"),(0,r.kt)("td",{parentName:"tr",align:null},"elimina el ultimo elemento del array")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".shift()"),(0,r.kt)("td",{parentName:"tr",align:null},"elimina el primer elemento del array")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".indexOf(elem)"),(0,r.kt)("td",{parentName:"tr",align:null},"busca un elemento dadonos la primera posicion sino lo encuentra devuelve -1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".lastIndexOf(elem)"),(0,r.kt)("td",{parentName:"tr",align:null},"busca un elemento dadonos la ultima posicion sino lo encuentra devuelve -1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".splice(posicion_inicio[,cantidad ,","[, items ]","])"),(0,r.kt)("td",{parentName:"tr",align:null},"Cambia el contenido de un array eliminando elementos existentes o agregando nuevos elementos.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".slice()"),(0,r.kt)("td",{parentName:"tr",align:null},"nos permite pasar los valores de un array para que sea copiado")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".slice([inicio ","[, final]","])"),(0,r.kt)("td",{parentName:"tr",align:null},"nos permite extraer elementos de un array desde la posicion inicio a posicion final sin tener encuenta el elemento de la posicion final")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".reverse()"),(0,r.kt)("td",{parentName:"tr",align:null},"invierte el orden de los elementos")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".join(separador)"),(0,r.kt)("td",{parentName:"tr",align:null},"une todo el array y nos devuelve un string sepearado por el separador")))),(0,r.kt)("p",null,"Ejemplos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const array=["ruben",\'dario\',32,1.73]\narray.push("gacha")\narray.length\n\n//se puede guardar los elementos que se eliminan en una variable\nlet itemEliminado=array.pop()\n')),(0,r.kt)("p",null,"Ejemplos splice:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const numeros=[1,2,3,4,5,6];\n\n// elimina desde la posicion indicada hasta el final\nnumeros.splice(3);\n\n//Elimina desde la posicion indicada la cantidad de datos del segundo parametro\n\nnumeros.splice(1,2);\n\n//Eliminar desde la posicion dada, la cantidad de elementos dados y agrega los elementos que queramos insertar desde uno a x elementos.\n\nnumeros.splice(1,2,6,7,8,9,10);\nnumeros.splice(10,1,9);\n\n\n//agregar elementos desde una posicion sin eliminar elementos, lo unico que se debe hacer es en cantidad colocar 0.\nnumeros.splice(1,0,6,7,8,9,10);\nnumeros.splice(10,0,9);\n\n")),(0,r.kt)("h2",{id:"metodos-de-array-avanzados"},"metodos de array avanzados."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Metodos"),(0,r.kt)("th",{parentName:"tr",align:null},"Descripcion"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".from(iterable)"),(0,r.kt)("td",{parentName:"tr",align:null},"convierte en array un elemento iterable.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".sort(","[ callback ]",")"),(0,r.kt)("td",{parentName:"tr",align:null},"Ordena los elementos de un array alfabeticamente(valor unicode). si le pasamos un callback los ordena en funcion del algoritmo que le pasemos.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".foreach(callback(currentValue),","[ index ]",")"),(0,r.kt)("td",{parentName:"tr",align:null},"ejecuta la funcion indicada una vez por cada elemento del array")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".some(callback)"),(0,r.kt)("td",{parentName:"tr",align:null},"comprueba si al menos un elemento del array cumple la condicion")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".every(callback)"),(0,r.kt)("td",{parentName:"tr",align:null},"comprueba si todos los elementos del array cumplen la condicion")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},".map(callback)"),(0,r.kt)("td",{parentName:"tr",align:null},"Transforma todos los elementos del array y devuelve un array nuevo")))),(0,r.kt)("p",null,"Ejemplos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"\n//ejemplo .from\n\nlet word=\"hola mundo\";\nlet letras=Array.from(word);\n\n//ejemplo .sort\n\nconst letters = ['b','c','z','a']\nconst numbers = [1,8,100,300,3]\n\nconsole.log(letters.sort());\n\nconsole.log(numbers.sort((a,b)=>a-b));\n\n// ejemplo .forEach\n\nconst numbers =[12,25,47,84,98]\n\nnumbers.forEach((number) => {\n    console.log(number)\n});\n\nnumbers.forEach((number, index) => {\n    console.log(`${number} esta en la posicion ${index}`);\n});\n\n//ejemplo .some y .every\n\nconst words=[\"HTML\", \"CSS\",\"javascript\",\"PHP\"]\n\nconsole.log(words.some((word)=>word.length>3));\n\nconsole.log(words.every((word)=>word.length>3));\n\n// ejemplo .map\n\nconst numbers =[12,25,47,84,98]\nnumbers.map((number)=>{\n    console.log(number*2)\n})\n\n// ejemplo .filter\nconst numbers =[12,25,47,84,98]\nnumbers.filter((number)=>{\n    number>80;\n})\n\n// ejemplo .reduce\nconst numbers =[12,25,47,84,98]\n\nnumbers.reduce((a,b)=>{\n    a+b;\n})\n\n// segunda forma de usar el reduce ya que se necesita inicializar cont.\n\nconst users=[\n    {\n        name:'user 1',\n        online: true\n    },\n    {\n        name:'user 2',\n        online: false\n    },\n    {\n        name:'user 3',\n        online: true\n    }\n]\n\nconst usersOnline=users.reduce((cont,user)=>{\n    if(user.online){cont++}\n    return cont\n},0);\n\n")),(0,r.kt)("h2",{id:"saber-si-una-variables-es-un-array"},"Saber si una variables es un array"),(0,r.kt)("p",null,"podemos usar el objeto array para validar si una variable es de tipo array o no"),(0,r.kt)("p",null,"Ejemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const array=[\"ruben\",'dario',32,1.73]\n\n//forma 1\nArray.isArray(array) // devuelve true\n\n//forma 2\n\narray instanceof Array // devuelve true\n")))}p.isMDXComponent=!0}}]);