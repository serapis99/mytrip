"use strict";(self.webpackChunkmy_trip=self.webpackChunkmy_trip||[]).push([[800],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,v=u["".concat(p,".").concat(m)]||u[m]||l[m]||o;return t?r.createElement(v,s(s({ref:n},d),{},{components:t})):r.createElement(v,s({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=u;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9606:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const o={},s="conversion de tipos de datos primitivos",i={unversionedId:"WEB/javascript/tipos_de_datos/conversion_variables",id:"WEB/javascript/tipos_de_datos/conversion_variables",title:"conversion de tipos de datos primitivos",description:"En algunos casos tendremos numero que son tratados como texto y para poder operarlos como numeros tendremos que hacer una conversion de tipo de string a numeric para esto usamos la funcion Number, tambien si sabemos el tipo del numero se puede usar las funciones parseInt y parseFloat.",source:"@site/docs/WEB/javascript/02_tipos_de_datos/06_conversion_variables.md",sourceDirName:"WEB/javascript/02_tipos_de_datos",slug:"/WEB/javascript/tipos_de_datos/conversion_variables",permalink:"/mytrip/docs/WEB/javascript/tipos_de_datos/conversion_variables",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"JS",previous:{title:"Manejo de string",permalink:"/mytrip/docs/WEB/javascript/tipos_de_datos/manejo_de_string"},next:{title:"Cambiar de base numerica",permalink:"/mytrip/docs/WEB/javascript/tipos_de_datos/cambiar_de_base_numerica"}},p={},c=[{value:"Funcion isNaN",id:"funcion-isnan",level:2}],d={toc:c};function l(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"conversion-de-tipos-de-datos-primitivos"},"conversion de tipos de datos primitivos"),(0,a.kt)("p",null,"En algunos casos tendremos numero que son tratados como texto y para poder operarlos como numeros tendremos que hacer una conversion de tipo de string a numeric para esto usamos la funcion ",(0,a.kt)("strong",{parentName:"p"},"Number"),", tambien si sabemos el tipo del numero se puede usar las funciones ",(0,a.kt)("strong",{parentName:"p"},"parseInt")," y ",(0,a.kt)("strong",{parentName:"p"},"parseFloat"),"."),(0,a.kt)("p",null,"Ejemplo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'let miEdad="30"\nlet edad=Number(miEdad)\nlet edad2=parseInt(miEdad)\nlet estatura="1.75"\nestatura=parseFloat(estatura)\n\n\ntypeof edad //debe ser number\n\n\n\n')),(0,a.kt)("p",null,"Para convertir un tipo de dato a string contamos con la funcion ",(0,a.kt)("strong",{parentName:"p"},"String")," y con la propiedad ",(0,a.kt)("strong",{parentName:"p"},".toString()")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"\nlet edad=30\nlet miEdad=String(edad)\n\nmiEdad=edad.toString()\n\ntypeof edad //debe ser string\n")),(0,a.kt)("h2",{id:"funcion-isnan"},"Funcion isNaN"),(0,a.kt)("p",null,"lo que sucede en muchos casos es que el string que queremos convertir a numero no es un numero y la conversion devuelve ",(0,a.kt)("strong",{parentName:"p"},"NaN")," (Not a Number), por lo tanto debemos validar que nos devuelva un numero la conversion para esto usamos la ",(0,a.kt)("strong",{parentName:"p"},"funcion")," ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"isNaN")),"."),(0,a.kt)("p",null,"Ejemplo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'let miEdad="treinta"\nlet edad=Number(miEdad)\n\nif(isNaN(edad)){\n    console.log("No es un numero")\n}else{\n    console.log("Realizar las operaciones con edad")\n}\n')))}l.isMDXComponent=!0}}]);