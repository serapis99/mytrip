"use strict";(self.webpackChunkmy_trip=self.webpackChunkmy_trip||[]).push([[4959],{3905:(e,r,n)=>{n.d(r,{Zo:()=>c,kt:()=>m});var a=n(7294);function t(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function d(e,r){if(null==e)return{};var n,a,t=function(e,r){if(null==e)return{};var n,a,t={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],r.indexOf(n)>=0||(t[n]=e[n]);return t}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var i=a.createContext({}),p=function(e){var r=a.useContext(i),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},c=function(e){var r=p(e.components);return a.createElement(i.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},u=a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),u=p(n),m=t,b=u["".concat(i,".").concat(m)]||u[m]||l[m]||o;return n?a.createElement(b,s(s({ref:r},c),{},{components:n})):a.createElement(b,s({ref:r},c))}));function m(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var o=n.length,s=new Array(o);s[0]=u;var d={};for(var i in r)hasOwnProperty.call(r,i)&&(d[i]=r[i]);d.originalType=e,d.mdxType="string"==typeof e?e:t,s[1]=d;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2063:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>d,toc:()=>p});var a=n(7462),t=(n(7294),n(3905));const o={},s="indexedDB",d={unversionedId:"WEB/javascript/APIs_HTML/api_indexedbd/primeros_pasos",id:"WEB/javascript/APIs_HTML/api_indexedbd/primeros_pasos",title:"indexedDB",description:"Es una manera de almacenar datos de manera persistente en el navegador.",source:"@site/docs/WEB/javascript/14_APIs_HTML/04_api_indexedbd/01_primeros_pasos.md",sourceDirName:"WEB/javascript/14_APIs_HTML/04_api_indexedbd",slug:"/WEB/javascript/APIs_HTML/api_indexedbd/primeros_pasos",permalink:"/mytrip/docs/WEB/javascript/APIs_HTML/api_indexedbd/primeros_pasos",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"JS",previous:{title:"barra de procesos",permalink:"/mytrip/docs/WEB/javascript/APIs_HTML/api_file/barra_de_procesos"},next:{title:"agregar datos",permalink:"/mytrip/docs/WEB/javascript/APIs_HTML/api_indexedbd/agregar_datos"}},i={},p=[{value:"pasos para crear una base de IndexedDB",id:"pasos-para-crear-una-base-de-indexeddb",level:2}],c={toc:p};function l(e){let{components:r,...n}=e;return(0,t.kt)("wrapper",(0,a.Z)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"indexeddb"},"indexedDB"),(0,t.kt)("p",null,"Es una manera de almacenar datos de manera persistente en el navegador.\nAlmacena pares llave-valor. los valores pueden ser objetos con estructuras complejas, y las llaves pueden ser propiedades de esos objetos. la API de IndexedDB es mayormente asincrona."),(0,t.kt)("p",null,"IndexedDB usa eventos DOM para notificar cuando los resultados estan disponibles.\nIndexedDB es orientada a objetos."),(0,t.kt)("h2",{id:"pasos-para-crear-una-base-de-indexeddb"},"pasos para crear una base de IndexedDB"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"crear la base de datos a traves del objeto indexadDB y el metodo ",(0,t.kt)("strong",{parentName:"li"},"open()"),"."),(0,t.kt)("li",{parentName:"ul"},"comprobar si la base de datos existe o tiene que ser creada a trav\xe9s del metodo ",(0,t.kt)("strong",{parentName:"li"},"onupgradeneeded"),"."),(0,t.kt)("li",{parentName:"ul"},"crear almacen de objetos con el metodo ",(0,t.kt)("strong",{parentName:"li"},"createObjetStore")),(0,t.kt)("li",{parentName:"ul"},"escuchar los eventos de exito y de error con los metodos ",(0,t.kt)("strong",{parentName:"li"},"onsucces()")," y ",(0,t.kt)("strong",{parentName:"li"},"onerror()"))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const indexedDB=window.indexedDB;\n\nif(indexedDB){\n    let db;\n    const request=indexedDB.open('nombre_almacen_datos',1);\n\n//evento que abre la base de datos\n    request.onsuccess=()=>{\n        db=request.result;\n    }\n\n//este metodo es el primero en ejecutarse, comprobando que exite la base de datos, si no existe la crea y ejecuta la funcion que se le pasa, si existe no ejecuta la funcion que se le pasa.\n    request.onupgradeneeded=()=>{\n        db=request.result;\n\n        //crea un almacen de datos si no existe.\n\n        const objectStore=db.createObjectStore('nombre_base',{\n            //permite gestionar las claves y que se autoincrementen\n            autoIncrement:true;\n        });\n    }\n\n    //se ejecuta si hay un error\n    request.onerror=(error)=>{\n        console.log(error);\n    }\n}\n")),(0,t.kt)("p",null,"todas las funciones de crear, eliminar, borrar datos se deben hacer en ",(0,t.kt)("strong",{parentName:"p"},"onupgradeneeded"),". ya que el metodo ",(0,t.kt)("strong",{parentName:"p"},"onsuccess")))}l.isMDXComponent=!0}}]);