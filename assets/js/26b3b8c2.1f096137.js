"use strict";(self.webpackChunkmy_trip=self.webpackChunkmy_trip||[]).push([[6073],{3905:(e,a,r)=>{r.d(a,{Zo:()=>d,kt:()=>m});var n=r(7294);function t(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function o(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?o(Object(r),!0).forEach((function(a){t(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function l(e,a){if(null==e)return{};var r,n,t=function(e,a){if(null==e)return{};var r,n,t={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],a.indexOf(r)>=0||(t[r]=e[r]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var i=n.createContext({}),c=function(e){var a=n.useContext(i),r=a;return e&&(r="function"==typeof e?e(a):s(s({},a),e)),r},d=function(e){var a=c(e.components);return n.createElement(i.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var r=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=t,g=u["".concat(i,".").concat(m)]||u[m]||p[m]||o;return r?n.createElement(g,s(s({ref:a},d),{},{components:r})):n.createElement(g,s({ref:a},d))}));function m(e,a){var r=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=r.length,s=new Array(o);s[0]=u;var l={};for(var i in a)hasOwnProperty.call(a,i)&&(l[i]=a[i]);l.originalType=e,l.mdxType="string"==typeof e?e:t,s[1]=l;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7781:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(7462),t=(r(7294),r(3905));const o={},s="Algunas expresiones comunes",l={unversionedId:"WEB/javascript/Expresiones_regulares/algunas_Expresiones_comunes",id:"WEB/javascript/Expresiones_regulares/algunas_Expresiones_comunes",title:"Algunas expresiones comunes",description:"email",source:"@site/docs/WEB/javascript/13_Expresiones_regulares/03_algunas_Expresiones_comunes.md",sourceDirName:"WEB/javascript/13_Expresiones_regulares",slug:"/WEB/javascript/Expresiones_regulares/algunas_Expresiones_comunes",permalink:"/mytrip/docs/WEB/javascript/Expresiones_regulares/algunas_Expresiones_comunes",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"JS",previous:{title:"Expresiones regulares",permalink:"/mytrip/docs/WEB/javascript/Expresiones_regulares/expresiones"},next:{title:"web storage",permalink:"/mytrip/docs/WEB/javascript/APIs_HTML/web_storage/primeros_pasos"}},i={},c=[{value:"email",id:"email",level:2},{value:"password",id:"password",level:2},{value:"nombre de usuario",id:"nombre-de-usuario",level:2},{value:"URL",id:"url",level:2},{value:"ip",id:"ip",level:2},{value:"valor hexadecimal",id:"valor-hexadecimal",level:2},{value:"validacion de tarjeta de credito",id:"validacion-de-tarjeta-de-credito",level:2}],d={toc:c};function p(e){let{components:a,...r}=e;return(0,t.kt)("wrapper",(0,n.Z)({},d,r,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"algunas-expresiones-comunes"},"Algunas expresiones comunes"),(0,t.kt)("h2",{id:"email"},"email"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const validateEmail = (email) => {\n    const emailRegex = /^(([^<>()\\[\\]\\\\.,:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\n    if(emailRegex.test(email)) console.log('email v\xe1lido')\n    else console.log('email incorrecto')\n}\n")),(0,t.kt)("h2",{id:"password"},"password"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const validatePasswordComplex = (password) => {\n    //Should have 1 lowercase letter, 1 uppercase letter, 1 number, 1 special character and be at least 8 characters long\n    const passwordRegex = /(?=(.*[0-9]))(?=.*[\\!@#$%^&*()\\\\[\\]{}\\-_+=~`|:\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}/\n    if(passwordRegex.test(password)) console.log('password v\xe1lido')\n    else console.log('password incorrecto')\n}\n\nconst validatePasswordModerate = (password) => {\n    //Should have 1 lowercase letter, 1 uppercase letter, 1 number, and be at least 8 characters long\n    const passwordRegex = /(?=(.*[0-9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/\n    if(passwordRegex.test(password)) console.log('password v\xe1lido')\n    else console.log('password incorrecto')\n}\n")),(0,t.kt)("h2",{id:"nombre-de-usuario"},"nombre de usuario"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const validateUsername = (username) => {\n    //Alphanumeric string that may include _ and \u2013 having a length of 3 to 16 characters \u2013\n    const usernameRegex = /^[a-z0-9_-]{3,16}$/\n    if(usernameRegex.test(username)) console.log('username v\xe1lido')\n    else console.log('username incorrecto')\n}\n")),(0,t.kt)("h2",{id:"url"},"URL"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const validateUrl = (url) => {\n    const urlRegex = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/\n    if(urlRegex.test(url)) console.log('url v\xe1lida')\n    else console.log('url incorrecta')\n}\n")),(0,t.kt)("h2",{id:"ip"},"ip"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const validateIP = (ip) => {\n    const ipRegex = /((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))/g\n    if(ipRegex.test(ip)) console.log('ip v\xe1lida')\n    else console.log('ip incorrecta')\n}\n")),(0,t.kt)("h2",{id:"valor-hexadecimal"},"valor hexadecimal"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const validateHexadecimal = (hexadecimal) => {\n    const hexadecimalRegex = /^#?([a-f0-9]{6}|[a-f0-9]{3})$/\n    if(hexadecimalRegex.test(hexadecimal)) console.log('hexadecimal v\xe1lido')\n    else console.log('hexadecimal incorrecto')\n}\n")),(0,t.kt)("h2",{id:"validacion-de-tarjeta-de-credito"},"validacion de tarjeta de credito"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const validateCreditCard = (card) => {\n    const creditCardRegex = /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/\n    if(creditCardRegex.test(card)) console.log('card v\xe1lido')\n    else console.log('card incorrecto')\n}\n")))}p.isMDXComponent=!0}}]);