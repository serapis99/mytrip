"use strict";(self.webpackChunkmy_trip=self.webpackChunkmy_trip||[]).push([[2599],{3905:(e,o,t)=>{t.d(o,{Zo:()=>l,kt:()=>d});var i=t(7294);function n(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function r(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);o&&(i=i.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?r(Object(t),!0).forEach((function(o){n(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function m(e,o){if(null==e)return{};var t,i,n=function(e,o){if(null==e)return{};var t,i,n={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],o.indexOf(t)>=0||(n[t]=e[t]);return n}(e,o);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=i.createContext({}),s=function(e){var o=i.useContext(c),t=o;return e&&(t="function"==typeof e?e(o):a(a({},o),e)),t},l=function(e){var o=s(e.components);return i.createElement(c.Provider,{value:o},e.children)},u={inlineCode:"code",wrapper:function(e){var o=e.children;return i.createElement(i.Fragment,{},o)}},p=i.forwardRef((function(e,o){var t=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,l=m(e,["components","mdxType","originalType","parentName"]),p=s(t),d=n,f=p["".concat(c,".").concat(d)]||p[d]||u[d]||r;return t?i.createElement(f,a(a({ref:o},l),{},{components:t})):i.createElement(f,a({ref:o},l))}));function d(e,o){var t=arguments,n=o&&o.mdxType;if("string"==typeof e||n){var r=t.length,a=new Array(r);a[0]=p;var m={};for(var c in o)hasOwnProperty.call(o,c)&&(m[c]=o[c]);m.originalType=e,m.mdxType="string"==typeof e?e:n,a[1]=m;for(var s=2;s<r;s++)a[s]=t[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},1440:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>m,toc:()=>s});var i=t(7462),n=(t(7294),t(3905));const r={},a="modificaciones en ultimo commit",m={unversionedId:"Programacion/Basico/Conocimiento Comun/Git y Github/modificaciones_ultimo_commit",id:"Programacion/Basico/Conocimiento Comun/Git y Github/modificaciones_ultimo_commit",title:"modificaciones en ultimo commit",description:"existen muchas ocaciones que enviamos un commit, pero vemos que quedo mal una linea esto nos obliga a crear un nuevo commit para guardar estos cambios pero existe la posibilidad de modificar el ultimo commit para que guarde esos cambios sin alterar el historial de commit.",source:"@site/docs/Programacion/Basico/01_Conocimiento Comun/02_Git y Github/09_modificaciones_ultimo_commit.md",sourceDirName:"Programacion/Basico/01_Conocimiento Comun/02_Git y Github",slug:"/Programacion/Basico/Conocimiento Comun/Git y Github/modificaciones_ultimo_commit",permalink:"/mytrip/docs/Programacion/Basico/Conocimiento Comun/Git y Github/modificaciones_ultimo_commit",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{},sidebar:"ProgramacionBasica",previous:{title:"Fucionando ramas",permalink:"/mytrip/docs/Programacion/Basico/Conocimiento Comun/Git y Github/union_de_ramas"},next:{title:"registros del historial de commit",permalink:"/mytrip/docs/Programacion/Basico/Conocimiento Comun/Git y Github/registro_del_historial"}},c={},s=[{value:"movernos entre los commit",id:"movernos-entre-los-commit",level:2}],l={toc:s};function u(e){let{components:o,...t}=e;return(0,n.kt)("wrapper",(0,i.Z)({},l,t,{components:o,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"modificaciones-en-ultimo-commit"},"modificaciones en ultimo commit"),(0,n.kt)("p",null,"existen muchas ocaciones que enviamos un commit, pero vemos que quedo mal una linea esto nos obliga a crear un nuevo commit para guardar estos cambios pero existe la posibilidad de modificar el ultimo commit para que guarde esos cambios sin alterar el historial de commit."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'\n# guardar cambios en el ultimo commit sin cambiar el mensaje\ngit commit --amend --no-edit\n\n# guardar cambios en el ultimo commit modificando el mensaje\ngit commit --amend -m "nuevo mensaje para el ultimo commit"\n\n#eliminar el ultimo commit\ngit reset --hard HEAD-1\n')),(0,n.kt)("p",null,"cuando se realiza el push puede ocasionar conflictos ya que el remoto encuentra cambios de un documento a otro en el mismo commit, esto nos obliga a crea un nuevo commit para la solucion de conflictos, entre remoto y local."),(0,n.kt)("h2",{id:"movernos-entre-los-commit"},"movernos entre los commit"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# ver la linea de tiempo de los commit realizados\ngit log --oneline\n\n# movernos a un commit\ngit checkout codigo_commit\n")))}u.isMDXComponent=!0}}]);