"use strict";(self.webpackChunkmy_trip=self.webpackChunkmy_trip||[]).push([[4267],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),f=a,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||o;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6670:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const o={},i="API File",l={unversionedId:"WEB/javascript/APIs_HTML/api_file/primeros_pasos",id:"WEB/javascript/APIs_HTML/api_file/primeros_pasos",title:"API File",description:"Esta API nos sirve para leer archivos que el usuario cargue en la web. se puee cargar archivos desde un input de tipo file o desde el objeto DataTransfer de la Api Drag&Drop",source:"@site/docs/WEB/javascript/14_APIs_HTML/03_api_file/01_primeros_pasos.md",sourceDirName:"WEB/javascript/14_APIs_HTML/03_api_file",slug:"/WEB/javascript/APIs_HTML/api_file/primeros_pasos",permalink:"/mytrip/docs/WEB/javascript/APIs_HTML/api_file/primeros_pasos",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"JS",previous:{title:"Uso de drag  & drop con el DOM",permalink:"/mytrip/docs/WEB/javascript/APIs_HTML/drag_drop/usando_con_elementos_dom"},next:{title:"barra de procesos",permalink:"/mytrip/docs/WEB/javascript/APIs_HTML/api_file/barra_de_procesos"}},s={},c=[],p={toc:c};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"api-file"},"API File"),(0,a.kt)("p",null,"Esta API nos sirve para leer archivos que el usuario cargue en la web. se puee cargar archivos desde un input de tipo file o desde el objeto DataTransfer de la Api Drag&Drop"),(0,a.kt)("p",null,"la interfaz mas utilizada para interactuar con ella es ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/es/docs/Web/API/FileReader"},"fileReader")),(0,a.kt)("p",null,"Ejemplo Cargar archivo texto:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"//elemento input file\nconst fileInput=document.getElementById('file');\n\n//poner a la escucha cuando el elemento cambia su valor\nfileInput.addEventListener('change',(e)=>{\n    //toma los datos del archivo\n    const file=e.target.files[0];\n    \n    //lee el archivo de texto\n    const fileReader=new FileReader()\n    fileReader.readAsText(file)\n\n    //evento cuando termina de leer el archivo.\n    fileReader.addEventListener('load',(e)=>{\n        console.log(\"evento cuando se lee el archivo\");\n    })\n})\n")),(0,a.kt)("p",null,"Ejemplo con una imagen"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"\nconst fileInput=document.getElementById('file');\nfileInput.addEventListener('change',(e)=>{\n    const file=e.target.files[0];\n    const fileReader=new FileReader()\n\n\n    fileReader.readAsDataURL(file)\n\n    fileReader.addEventListener('load',(e)=>{\n        console.log(\"evento cuando se lee el archivo\");\n    })\n})\n")),(0,a.kt)("p",null,"Ejemplo con varias imagen"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"\nconst fileInput=document.getElementById('file');\nfileInput.addEventListener('change',(e)=>{\n    const files=e.target.files;\n    const fragment=document.createDocumentFragment();\n\n    for(const file of files){\n        const fileReader=new FileReader();\n        const img=document.createElement('IMG');\n        fileReader.readAsDataURL(file)\n\n        fileReader.addEventListener('load',(e)=>{\n            img.setAttribute('src',e.target.result);\n        })\n        fragment.appendChild(img);\n    }\n    images.appendChild(fragment)\n})\n")))}d.isMDXComponent=!0}}]);